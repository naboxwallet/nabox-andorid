package com.nuls.naboxpro.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.nuls.naboxpro.entity.AuthorizationBean;
import com.nuls.naboxpro.entity.ContactsDaoEntity;
import com.nuls.naboxpro.entity.DAppBean;
import com.nuls.naboxpro.entity.WalletInfo;

import com.nuls.naboxpro.db.AuthorizationBeanDao;
import com.nuls.naboxpro.db.ContactsDaoEntityDao;
import com.nuls.naboxpro.db.DAppBeanDao;
import com.nuls.naboxpro.db.WalletInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig authorizationBeanDaoConfig;
    private final DaoConfig contactsDaoEntityDaoConfig;
    private final DaoConfig dAppBeanDaoConfig;
    private final DaoConfig walletInfoDaoConfig;

    private final AuthorizationBeanDao authorizationBeanDao;
    private final ContactsDaoEntityDao contactsDaoEntityDao;
    private final DAppBeanDao dAppBeanDao;
    private final WalletInfoDao walletInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        authorizationBeanDaoConfig = daoConfigMap.get(AuthorizationBeanDao.class).clone();
        authorizationBeanDaoConfig.initIdentityScope(type);

        contactsDaoEntityDaoConfig = daoConfigMap.get(ContactsDaoEntityDao.class).clone();
        contactsDaoEntityDaoConfig.initIdentityScope(type);

        dAppBeanDaoConfig = daoConfigMap.get(DAppBeanDao.class).clone();
        dAppBeanDaoConfig.initIdentityScope(type);

        walletInfoDaoConfig = daoConfigMap.get(WalletInfoDao.class).clone();
        walletInfoDaoConfig.initIdentityScope(type);

        authorizationBeanDao = new AuthorizationBeanDao(authorizationBeanDaoConfig, this);
        contactsDaoEntityDao = new ContactsDaoEntityDao(contactsDaoEntityDaoConfig, this);
        dAppBeanDao = new DAppBeanDao(dAppBeanDaoConfig, this);
        walletInfoDao = new WalletInfoDao(walletInfoDaoConfig, this);

        registerDao(AuthorizationBean.class, authorizationBeanDao);
        registerDao(ContactsDaoEntity.class, contactsDaoEntityDao);
        registerDao(DAppBean.class, dAppBeanDao);
        registerDao(WalletInfo.class, walletInfoDao);
    }
    
    public void clear() {
        authorizationBeanDaoConfig.clearIdentityScope();
        contactsDaoEntityDaoConfig.clearIdentityScope();
        dAppBeanDaoConfig.clearIdentityScope();
        walletInfoDaoConfig.clearIdentityScope();
    }

    public AuthorizationBeanDao getAuthorizationBeanDao() {
        return authorizationBeanDao;
    }

    public ContactsDaoEntityDao getContactsDaoEntityDao() {
        return contactsDaoEntityDao;
    }

    public DAppBeanDao getDAppBeanDao() {
        return dAppBeanDao;
    }

    public WalletInfoDao getWalletInfoDao() {
        return walletInfoDao;
    }

}
